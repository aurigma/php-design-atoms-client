<?php
/**
 * DesignAtomsCompatibilityApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  Aurigma\DesignAtoms
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * DesignAtoms API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Aurigma\DesignAtoms\Test\Api;

use \Aurigma\DesignAtoms\Configuration;
use \Aurigma\DesignAtoms\ApiException;
use \Aurigma\DesignAtoms\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * DesignAtomsCompatibilityApiTest Class Doc Comment
 *
 * @category Class
 * @package  Aurigma\DesignAtoms
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DesignAtomsCompatibilityApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for designAtomsCompatibilityCssFonts
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilityCssFonts()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for designAtomsCompatibilityFonts
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilityFonts()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for designAtomsCompatibilityGetCssFont
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilityGetCssFont()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for designAtomsCompatibilityGetFallbackFonts
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilityGetFallbackFonts()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for designAtomsCompatibilityGetImageSize
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilityGetImageSize()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for designAtomsCompatibilityGetLicense
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilityGetLicense()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for designAtomsCompatibilityGetShapeBounds
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilityGetShapeBounds()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for designAtomsCompatibilityGetWatermarkItems
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilityGetWatermarkItems()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for designAtomsCompatibilityImg
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilityImg()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for designAtomsCompatibilityPth
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilityPth()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for designAtomsCompatibilityResource
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilityResource()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for designAtomsCompatibilitySvg
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilitySvg()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for designAtomsCompatibilityTxt
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilityTxt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for designAtomsCompatibilityUpdateArchedTextItemHandler
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilityUpdateArchedTextItemHandler()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for designAtomsCompatibilityUpdateAutoScaledTextItemHandler
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilityUpdateAutoScaledTextItemHandler()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for designAtomsCompatibilityUpdateBarcodeItemHandler
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilityUpdateBarcodeItemHandler()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for designAtomsCompatibilityUpdateBoundedTextItemHandler
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilityUpdateBoundedTextItemHandler()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for designAtomsCompatibilityUpdateByColorData
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilityUpdateByColorData()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for designAtomsCompatibilityUpdateByMultiCallRequest
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilityUpdateByMultiCallRequest()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for designAtomsCompatibilityUpdateCurvedTextItemHandler
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilityUpdateCurvedTextItemHandler()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for designAtomsCompatibilityUpdateImageItemHandler
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilityUpdateImageItemHandler()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for designAtomsCompatibilityUpdatePathBoundedTextItemHandler
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilityUpdatePathBoundedTextItemHandler()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for designAtomsCompatibilityUpdatePlainTextItemHandler
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilityUpdatePlainTextItemHandler()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for designAtomsCompatibilityUpdateShapeItemHandler
     *
     * .
     *
     */
    public function testDesignAtomsCompatibilityUpdateShapeItemHandler()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
